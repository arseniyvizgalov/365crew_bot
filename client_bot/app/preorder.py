from aiogram import F, Router
from aiogram.types import CallbackQuery, Message, ReplyKeyboardRemove, FSInputFile, ContentType
from client_bot.kb import ready_kb, order_kb, no_photo_kb, preorder_done_kb
from pathlib import Path
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from client_bot.app.db import MY_REQUESTS

PHOTO_PATH = Path(__file__).parent / "start_photo.jpg"
router = Router()
class OrderStates(StatesGroup):
    model = State()
    photo = State()
    size = State()




@router.callback_query(F.data == 'preorder')
async def preorder(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer('–ú—ã —Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–∏–º –µ—ë –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n–ì–æ—Ç–æ–≤—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É?', reply_markup=ready_kb)

@router.message(F.text == "–ù–∞–∑–∞–¥")
async def order(message: Message):
    await message.delete()
    photo = FSInputFile(PHOTO_PATH)
    await message.answer('üîô', reply_markup=ReplyKeyboardRemove())
    await message.answer_photo(photo=photo, caption='–ó–∞–∫–∞–∑–∞—Ç—å –æ–¥–µ–∂–¥—É –∏–∑ 365Store –º–æ–∂–Ω–æ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏!\n\n1.–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –Ω–∞–ª–∏—á–∏—è\n2.–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –ø–æ–¥ –∑–∞–∫–∞–∑\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç‚¨áÔ∏è', reply_markup=order_kb)

@router.message(F.text == "–ü–æ–µ—Ö–∞–ª–∏")
async def start_order(message: Message, state: FSMContext):
    await state.set_state(OrderStates.model)
    await message.answer(
        "1/3 –í–≤–µ–¥–∏ –º–æ–¥–µ–ª—å –∫—Ä–æ—Å—Å–æ–≤–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä: Nike Air Max 270):",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(OrderStates.model, F.text)
async def got_model(message: Message, state: FSMContext):
    model = (message.text or "").strip()
    if len(model) < 2:
        return await message.answer("–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ. –£–∫–∞–∂–∏ –º–æ–¥–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é üôÇ")
    await state.update_data(model=model)
    await state.set_state(OrderStates.photo)
    await message.answer(
        "2/3Ô∏è‚É£ –ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ (–∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ). –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç ‚Äî –Ω–∞–∂–º–∏ ¬´–Ω–µ—Ç —Ñ–æ—Ç–æ¬ª.",
        reply_markup=no_photo_kb
    )

@router.message(OrderStates.photo, F.content_type == ContentType.PHOTO)
async def got_photo(message: Message, state: FSMContext):
    file_id = message.photo[-1].file_id
    await state.update_data(photo=file_id)
    await state.set_state(OrderStates.size)
    await message.answer(
        "3/3Ô∏è‚É£ –£–∫–∞–∂–∏ —Ä–∞–∑–º–µ—Ä (EUR, –Ω–∞–ø—Ä–∏–º–µ—Ä: 42):",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(OrderStates.photo, F.text == '–ù–µ—Ç —Ñ–æ—Ç–æ')
async def no_photo(message: Message, state: FSMContext):
    await state.update_data(photo=None)
    await state.set_state(OrderStates.size)
    await message.answer(
        "3/3Ô∏è‚É£ –£–∫–∞–∂–∏ —Ä–∞–∑–º–µ—Ä (EUR, –Ω–∞–ø—Ä–∏–º–µ—Ä: 42):",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(OrderStates.size, F.text)
async def got_size(message: Message, state: FSMContext):
    size = (message.text or "").strip()

    data = await state.get_data()
    req = {"model": data["model"], "photo": data.get("photo"), "size": size}

    MY_REQUESTS[message.from_user.id].append(req)

    await state.clear()

    caption = (
        "‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ <b>–ú–æ–∏ –∑–∞—è–≤–∫–∏</b>.\n\n"
        f"<b>–ú–æ–¥–µ–ª—å:</b> {req['model']}\n"
        f"<b>–†–∞–∑–º–µ—Ä:</b> {req['size']}\n"
        f"<b>–§–æ—Ç–æ:</b> {'–µ—Å—Ç—å' if req['photo'] else '–Ω–µ—Ç'}"
    )
    if req["photo"]:
        await message.answer_photo(req["photo"], caption=caption, parse_mode="HTML", reply_markup=preorder_done_kb)
    else:
        await message.answer(caption, parse_mode="HTML", reply_markup=preorder_done_kb)




